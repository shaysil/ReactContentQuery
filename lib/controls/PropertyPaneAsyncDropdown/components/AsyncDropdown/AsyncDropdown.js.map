{"version":3,"sources":["controls/PropertyPaneAsyncDropdown/components/AsyncDropdown/AsyncDropdown.tsx"],"names":[],"mappings":"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","file":"controls/PropertyPaneAsyncDropdown/components/AsyncDropdown/AsyncDropdown.js","sourcesContent":["import * as React                               from 'react';\nimport { Text }                                 from '@microsoft/sp-core-library';\nimport { Dropdown, IDropdownOption, Spinner }   from 'office-ui-fabric-react';\nimport { IAsyncDropdownProps }                  from './IAsyncDropdownProps';\nimport { IAsyncDropdownState }                  from './IAsyncDropdownState';\nimport { cloneDeep }                            from '@microsoft/sp-lodash-subset';\n\nexport class AsyncDropdown extends React.Component<IAsyncDropdownProps, IAsyncDropdownState> {\n\n\n    /*************************************************************************************\n     * Component's constructor\n     * @param props \n     * @param state \n     *************************************************************************************/\n    constructor(props: IAsyncDropdownProps, state: IAsyncDropdownState) {\n        super(props);\n\n        this.state = {\n            processed: false,\n            options: new Array<IDropdownOption>(),\n            selectedKey: props.selectedKey,\n            error: null\n        };\n    }\n\n\n    /*************************************************************************************\n     * Called once after initial rendering\n     *************************************************************************************/\n    public componentDidMount(): void {\n        this.loadOptions();\n    }\n\n\n    /*************************************************************************************\n     * Called immediately after updating occurs\n     *************************************************************************************/\n    public componentDidUpdate(prevProps: IAsyncDropdownProps, prevState: IAsyncDropdownState): void {\n        if (this.props.disabled !== prevProps.disabled || this.props.stateKey !== prevProps.stateKey) {\n            this.loadOptions();\n        }\n    }\n\n\n    /*************************************************************************************\n     * Loads the dropdown options asynchronously\n     *************************************************************************************/\n    private loadOptions(): void {\n        this.setState({\n            processed: false,\n            error: null,\n            options: new Array<IDropdownOption>(),\n            selectedKey: null\n        });\n\n        this.props.loadOptions().then((options: IDropdownOption[]) => {\n            this.setState({\n                processed: true,\n                error: null,\n                options: options,\n                selectedKey: this.props.selectedKey\n            });\n        })\n        .catch((error: any) => {\n            this.setState((prevState: IAsyncDropdownState, props: IAsyncDropdownProps): IAsyncDropdownState => {\n                prevState.processed = true;\n                prevState.error = error;\n                return prevState;\n            });\n        });\n    }\n\n\n    /*************************************************************************************\n     * Temporary fix because of an issue introducted in office-ui-fabric-react 4.32.0 :\n     * https://github.com/OfficeDev/office-ui-fabric-react/issues/2719\n     * Issue has been resolved but SPFX still refers to 4.32.0, so this is a temporary fix\n     * while waiting for SPFX to use a more recent version of office-ui-fabric-react\n     *************************************************************************************/\n    private onChanged(option: IDropdownOption, index?: number): void {\n\n        // reset previously selected options\n        const options: IDropdownOption[] = this.state.options;\n        options.forEach((o: IDropdownOption): void => {\n            if (o.key !== option.key) {\n                o.selected = false;\n            }\n        });\n        this.setState((prevState: IAsyncDropdownState, props: IAsyncDropdownProps): IAsyncDropdownState => {\n            prevState.options = options;\n            prevState.selectedKey = option.key;\n            return prevState;\n        });\n        if (this.props.onChanged) {\n            this.props.onChanged(option, index);\n        }\n    }\n\n\n    /*************************************************************************************\n     * Renders the the AsyncDropdown component\n     *************************************************************************************/\n    public render() {\n        \n        const loading = !this.state.processed ? <Spinner label={this.props.loadingLabel} /> : <div />;\n        const error = this.state.error != null ? <div className=\"ms-TextField-errorMessage ms-u-slideDownIn20\">{ Text.format(this.props.errorLabelFormat, this.state.error) }</div> : <div />;\n\n        return (\n            <div>\n                <Dropdown label={this.props.label}\n                          isDisabled={this.props.disabled}\n                          onChanged={this.onChanged.bind(this)}\n                          selectedKey={this.state.selectedKey}\n                          options={this.state.options} />\n\n                {loading}\n                {error}\n            </div>\n        );\n    }\n}\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}