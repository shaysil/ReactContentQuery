{"version":3,"sources":["controls/PropertyPaneAsyncChecklist/PropertyPaneAsyncChecklist.ts"],"names":[],"mappings":";;AAAA,6BAAqE;AACrE,oCAAyE;AACzE,8DAA0F;AAG1F,6EAA0G;AAI1G;IASE;;;;+FAI2F;IAC3F,oCAAY,cAAsB,EAAE,UAA4C;QAZzE,SAAI,GAA0B,uCAAqB,CAAC,MAAM,CAAC;QAahE,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,IAAI,CAAC,UAAU,GAAG;YACd,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,YAAY,EAAE,UAAU,CAAC,YAAY;YACrC,gBAAgB,EAAE,UAAU,CAAC,gBAAgB;YAC7C,OAAO,EAAE,UAAU,CAAC,OAAO;YAC3B,OAAO,EAAE,UAAU,CAAC,OAAO;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YAClC,GAAG,EAAE,cAAc;SACtB,CAAC;IACJ,CAAC;IAGD;;+FAE2F;IACpF,2CAAM,GAAb;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAGD;;+FAE2F;IACnF,6CAAQ,GAAhB,UAAiB,IAAiB;QAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;QAED,IAAM,cAAc,GAA6C,KAAK,CAAC,aAAa,CAAC,+BAAc,EAAE;YACjG,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;YACpC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;YAC1C,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YAClC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;YAChC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;YAChC,QAAQ,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;SAClC,CAAC,CAAC;QAEH,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAGD;;+FAE2F;IACnF,6CAAQ,GAAhB,UAAiB,WAAqB;QACpC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;IACH,iCAAC;AAAD,CApEA,AAoEC,IAAA;AApEY,gEAA0B","file":"controls/PropertyPaneAsyncChecklist/PropertyPaneAsyncChecklist.js","sourcesContent":["import * as React                                       from 'react';\nimport * as ReactDom                                    from 'react-dom';\nimport { IPropertyPaneField, PropertyPaneFieldType }    from '@microsoft/sp-webpart-base';\nimport { IPropertyPaneAsyncChecklistProps }             from './IPropertyPaneAsyncChecklistProps';\nimport { IPropertyPaneAsyncChecklistInternalProps }     from './IPropertyPaneAsyncChecklistInternalProps';\nimport { AsyncChecklist }                               from './components/AsyncChecklist/AsyncChecklist';\nimport { IAsyncChecklistProps }                         from './components/AsyncChecklist/IAsyncChecklistProps';\n\n\nexport class PropertyPaneAsyncChecklist implements IPropertyPaneField<IPropertyPaneAsyncChecklistProps> {\n\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\n  public targetProperty: string;\n  public properties: IPropertyPaneAsyncChecklistInternalProps;\n  public loadedItems: boolean;\n  private elem: HTMLElement;\n\n\n  /*****************************************************************************************\n   * Property pane's contructor\n   * @param targetProperty \n   * @param properties \n   *****************************************************************************************/\n  constructor(targetProperty: string, properties: IPropertyPaneAsyncChecklistProps) {\n    this.targetProperty = targetProperty;\n\n    this.properties = {\n        loadItems: properties.loadItems,\n        checkedItems: properties.checkedItems,\n        onPropertyChange: properties.onPropertyChange,\n        disable: properties.disable,\n        strings: properties.strings,\n        onRender: this.onRender.bind(this),\n        key: targetProperty\n    };\n  }\n\n\n  /*****************************************************************************************\n   * Renders the AsyncChecklist property pane\n   *****************************************************************************************/\n  public render(): void {\n    if (!this.elem) {\n      return;\n    }\n    this.onRender(this.elem);\n  }\n\n\n  /*****************************************************************************************\n   * Renders the AsyncChecklist property pane\n   *****************************************************************************************/\n  private onRender(elem: HTMLElement): void {\n    if (!this.elem) {\n      this.elem = elem;\n    }\n\n    const asyncChecklist: React.ReactElement<IAsyncChecklistProps> = React.createElement(AsyncChecklist, {\n        loadItems: this.properties.loadItems,\n        checkedItems: this.properties.checkedItems,\n        onChange: this.onChange.bind(this),\n        disable: this.properties.disable,\n        strings: this.properties.strings,\n        stateKey: new Date().toString()\n    });\n\n    ReactDom.render(asyncChecklist, elem);\n    this.loadedItems = true;\n  }\n\n\n  /*****************************************************************************************\n   * Call the property pane's onPropertyChange when the QueryFilterPanel changes\n   *****************************************************************************************/\n  private onChange(checkedKeys: string[]): void {\n    this.properties.onPropertyChange(this.targetProperty, checkedKeys);\n  }\n}"],"sourceRoot":"..\\..\\..\\src"}